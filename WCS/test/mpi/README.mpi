README.mpi             26 Jan 06   RAA


NCSA: LAM  mpi,  python mympi w/either numarray or Numeric varients


The mpi tester codes are paired:

*MEF.py   are the driver codes which generate the WCS for an entire MEF image.
	  Uses mpi to distribute the single-CCD-WCS-generator code
          to different processors.

*HDU.py   The secondary code called by *MEF.py to generate one CCD's WCS.


mpiHalfDist_WcsPerMEF.py*
mpiHalfDist_WcsPerHdu.py*		single CCD wcs converter, does not
                                        distribute the SCAT generation so
                                        works for both mympi varients.

mpiNrayAllDist_WcsPerMEF.py*
mpiNrayAllDist_WcsPerHdu.py*		single ccd WCS converter which
                                        works with mympi using numarray

mpiNricAllDist_WcsPerMEF.py*
mpiNricAllDist_WcsPerHdu.py*		single ccd WCS converter which
                                        works with mympi using Numeric

Issues:
using mpi w/Numeric arrays caused the pipeline code to fail due to its use of
subsetting arrays.  The workaround meant the mpi-distributed arrays needed
to be converted to numarray arrays on BCAST receipt.

using mpi w/numarray arrays requires the mpi codes to treat scalar values as
arrays

Note:
This issue only arises when the SCAT results are mpi_bcast. If they are
extracted on each mpi processor (so no mpi_bcast of values) the pipeline
code works with either mpi w/Numeric or mpi w/numarray


-----------------------------------------------------------------------------

To swap between numarray and Numeric mympi varients,  edit:
	/lsst_ibrix/LSSTProto/mympimod_1.11/src/mympimodule.c
to install the desired header file: 
	#include <Numeric/arrayobject.h>
     or
	#include <numarray/arrayobject.h>

Then build and move into the python site-packages using:

	% make -f makefile.lsst clean
	% make -f makefile.lsst 
	% make -f makefile.lsst install



/lsst_ibrix/LSSTProto/mympimod_1.11/src/makefile.lsst:
-----------------------------------------------------------------------
LIB=lam
                                                                                
default: mpi.so
                                                                                
                                                                                
mpi.so: mympimodule.c
	python setupmpimod_lsst.py.$(LIB) build
	cp build/*lib*/*so .
	cp build/*lib*/*so ../mpi_tests
                                                                                
                                                                                
clean:
	rm -rf mpi.so
	rm -rf ../mpi_tests/mpi.so
	rm -rf build
                                                                                
tar: clean
	tar -cf mympimod.tar makefile* mympimodule.c setupmpimod*
                                                                                
install:default
	cp build/*lib*/*so /lsst_ibrix/LSSTProto/Python-2.4.2/lib/python2.4/site-packages/
-----------------------------------------------------------------------------


/lsst_ibrix/LSSTProto/mympimod_1.11/src/setupmpimod_lsst.py.lam:
-----------------------------------------------------------------------------
from distutils.core import setup, Extension
 
module1 = Extension('mpi',
                    libraries = ['mpi','lam'],
                    include_dirs = ['/usr/include'],
                    library_dirs = ['/usr/lib'],
                    sources = ['mympimodule.c'])
 
setup (name = 'PackageName',
       version = '1.0',
       description = 'This is an mpi package',
       ext_modules = [module1])
------------------------------------------------------------------------------

/lsst_ibrix/LSSTProto/mympimod_1.11/src/README.LSST:
------------------------------------------------------------------------------
18 Jan 06 RAA
 
The code: mympimodule.c, was changed to remove s Py_DECREF which was causing
an error failure.
 
setupmpimod_lsst.py.lam  was modified to reflect the lsstarchive system setup.
 
makefile.lsst was modified to reflect LAM MPI use on lsstarchive
 
 
mympimodule.c_debug contains debugging print statements used during the
Py_DECREF debug.  Might come in handy later during pipeline debug.
-------------------------------------------------------------------------------
